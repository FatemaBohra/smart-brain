{"ast":null,"code":"var _jsxFileName = \"/Users/fatemabohra/src/UniversityProjects/VisualCode/UdemyProject/smart-brain/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = '739feb1cb0dc4987b9429e217a253f78';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'fatema';\n  const APP_ID = 'test';\n  // Change these to whatever model and image URL you want to use\n  // const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onPictureSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      const MODEL_ID = 'face-detection';\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    this.state = initialState;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: this.state.isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onPictureSubmit: this.onPictureSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          imageUrl: this.state.imageUrl,\n          box: this.state.box\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Navigation","Signin","Register","FaceRecognition","Logo","ImageLinkForm","Rank","ParticlesBg","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","initialState","input","box","route","isSignedIn","user","id","name","email","entries","joined","App","Component","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","setState","onInputChange","event","target","value","onPictureSubmit","state","MODEL_ID","fetch","then","response","json","count","Object","assign","catch","err","console","log","onRouteChange","loadUser","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","bg"],"sources":["/Users/fatemabohra/src/UniversityProjects/VisualCode/UdemyProject/smart-brain/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\n\nconst returnClarifaiRequestOptions = (imageUrl) => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = '739feb1cb0dc4987b9429e217a253f78';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'fatema';\n  const APP_ID = 'test';\n  // Change these to whatever model and image URL you want to use\n  // const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [\n      {\n        \"data\": {\n          \"image\": {\n            \"url\": IMAGE_URL\n          }\n        }\n      }\n    ]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n\n  return requestOptions\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  onPictureSubmit = () => {\n    this.setState({ imageUrl: this.state.input })\n    const MODEL_ID = 'face-detection';\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, { entries: count }))\n          })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState);\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n        {this.state.route === 'home' ?\n          <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm onInputChange={this.onInputChange} onPictureSubmit={this.onPictureSubmit} />\n            <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box} />\n          </div>\n          :\n          (\n            this.state.route === 'signin' ?\n              <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              :\n              <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n        <ParticlesBg type=\"cobweb\" bg={true} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}